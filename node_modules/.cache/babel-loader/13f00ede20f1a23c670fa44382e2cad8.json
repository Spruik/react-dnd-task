{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25359\\\\sp\\\\react-dnd-task\\\\src\\\\components\\\\board-column.tsx\";\nimport * as React from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n// Import BoardItem component\nimport { BoardItem } from \"./board-item\"; // Define types for board column element properties\n\n// Create styles for BoardColumnWrapper element\nconst BoardColumnWrapper = styled.div`\n  flex: 1;\n  background-color: #e5eff5;\n  background-color: ${props => props.isDragging ? \"#545454\" : \"#e5eff5\"};\n\n  & + & {\n    margin-left: 12px;\n  }\n`; // Create styles for BoardColumnTitle element\n\nconst BoardColumnTitle = styled.div`\n  font-size: 20px;\n  padding:8px;\n  font-weight:bold;\n  margin-bottom: 5px;\n  height:50px;\n  border:2px solid red;\n  line-height:50px;\n  color:#fff;\n\n`; // Create styles for BoardColumnContent element\n\nconst BoardColumnContent = styled.div`\n  min-height: 20px;\n  background-color: ${props => props.isDraggingOver ? \"#aecde0\" : null};\n  border-radius: 4px;\n`; // Create and export the BoardColumn component\n\nexport const BoardColumn = props => {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.column.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, (provided1, snapshot1) => /*#__PURE__*/React.createElement(BoardColumnWrapper, Object.assign({}, provided1.draggableProps, provided1.dragHandleProps, {\n    ref: provided1.innerRef,\n    isDragging: snapshot1.isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BoardColumnTitle, {\n    style: {\n      backgroundColor: props.bgColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, props.column.title), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: props.column.id,\n    direction: \"vertical\",\n    isDropDisabled: props.droppable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(BoardColumnContent, Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), props.items.map((item, index) => /*#__PURE__*/React.createElement(BoardItem, {\n    key: item.id,\n    item: item,\n    index: index,\n    onkey: props.onkey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  })), provided.placeholder))));\n};","map":{"version":3,"sources":["C:/Users/25359/sp/react-dnd-task/src/components/board-column.tsx"],"names":["React","Draggable","Droppable","styled","BoardItem","BoardColumnWrapper","div","props","isDragging","BoardColumnTitle","BoardColumnContent","isDraggingOver","BoardColumn","column","id","index","provided1","snapshot1","draggableProps","dragHandleProps","innerRef","backgroundColor","bgColor","title","droppable","provided","snapshot","droppableProps","items","map","item","onkey","placeholder"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AAmBA;AACA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAmC;AACrE;AACA;AACA,sBAAuBC,KAAD,IAAYA,KAAK,CAACC,UAAN,GAAmB,SAAnB,GAA+B,SAAW;AAC5E;AACA;AACA;AACA;AACA,CARA,C,CAUA;;AACA,MAAMC,gBAAgB,GAAGN,MAAM,CAACG,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA,C,CAYA;;AACA,MAAMI,kBAAkB,GAAGP,MAAM,CAACG,GAAmC;AACrE;AACA,sBAAuBC,KAAD,IAAYA,KAAK,CAACI,cAAN,GAAuB,SAAvB,GAAmC,IAAM;AAC3E;AACA,CAJA,C,CAMA;;AACA,OAAO,MAAMC,WAAuC,GAAIL,KAAD,IAAW;AAChE,sBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEA,KAAK,CAACM,MAAN,CAAaC,EAArC;AAAyC,IAAA,KAAK,EAAEP,KAAK,CAACQ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,SAAD,EAAYC,SAAZ,kBACC,oBAAC,kBAAD,oBACMD,SAAS,CAACE,cADhB,EAEMF,SAAS,CAACG,eAFhB;AAGE,IAAA,GAAG,EAAEH,SAAS,CAACI,QAHjB;AAIE,IAAA,UAAU,EAAEH,SAAS,CAACT,UAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAME,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAACa,MAAAA,eAAe,EAACd,KAAK,CAACe;AAAvB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Df,KAAK,CAACM,MAAN,CAAaU,KAAxE,CANF,eAQE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEhB,KAAK,CAACM,MAAN,CAAaC,EAArC;AAAyC,IAAA,SAAS,EAAC,UAAnD;AAA8D,IAAA,cAAc,EAAEP,KAAK,CAACiB,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,QAAD,EAAWC,QAAX,kBACC,oBAAC,kBAAD,oBACMD,QAAQ,CAACE,cADf;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAACL,QAFhB;AAGE,IAAA,cAAc,EAAEM,QAAQ,CAACf,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGJ,KAAK,CAACqB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAYf,KAAZ,kBACf,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEe,IAAI,CAAChB,EADZ;AAEE,IAAA,IAAI,EAAEgB,IAFR;AAGE,IAAA,KAAK,EAAEf,KAHT;AAIE,IAAA,KAAK,EAAER,KAAK,CAACwB,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,EAaGN,QAAQ,CAACO,WAbZ,CAFJ,CARF,CAFJ,CADF;AAmCD,CApCM","sourcesContent":["import * as React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\n// Import BoardItem component\r\nimport { BoardItem } from \"./board-item\";\r\n\r\n// Define types for board column element properties\r\ntype BoardColumnProps = {\r\n  index: number;\r\n  key: string;\r\n  column: any;\r\n  items: any;\r\n  droppable: boolean;\r\n  onkey: (event: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  bgColor:string;\r\n\r\n};\r\n\r\n// Define types for board column content style properties\r\n// This is necessary for TypeScript to accept the 'isDraggingOver' prop.\r\ntype BoardColumnContentStylesProps = {\r\n  isDraggingOver?: boolean;\r\n  isDragging?: boolean;\r\n};\r\n\r\n// Create styles for BoardColumnWrapper element\r\nconst BoardColumnWrapper = styled.div<BoardColumnContentStylesProps>`\r\n  flex: 1;\r\n  background-color: #e5eff5;\r\n  background-color: ${(props) => (props.isDragging ? \"#545454\" : \"#e5eff5\")};\r\n\r\n  & + & {\r\n    margin-left: 12px;\r\n  }\r\n`;\r\n\r\n// Create styles for BoardColumnTitle element\r\nconst BoardColumnTitle = styled.div`\r\n  font-size: 20px;\r\n  padding:8px;\r\n  font-weight:bold;\r\n  margin-bottom: 5px;\r\n  height:50px;\r\n  border:2px solid red;\r\n  line-height:50px;\r\n  color:#fff;\r\n\r\n`;\r\n\r\n// Create styles for BoardColumnContent element\r\nconst BoardColumnContent = styled.div<BoardColumnContentStylesProps>`\r\n  min-height: 20px;\r\n  background-color: ${(props) => (props.isDraggingOver ? \"#aecde0\" : null)};\r\n  border-radius: 4px;\r\n`;\r\n\r\n// Create and export the BoardColumn component\r\nexport const BoardColumn: React.FC<BoardColumnProps> = (props) => {\r\n  return (\r\n    <Draggable draggableId={props.column.id} index={props.index}>\r\n      {(provided1, snapshot1) => (\r\n        <BoardColumnWrapper\r\n          {...provided1.draggableProps}\r\n          {...provided1.dragHandleProps}\r\n          ref={provided1.innerRef}\r\n          isDragging={snapshot1.isDragging}\r\n        >\r\n          <BoardColumnTitle style={{backgroundColor:props.bgColor}}>{props.column.title}</BoardColumnTitle>\r\n          \r\n          <Droppable droppableId={props.column.id} direction=\"vertical\" isDropDisabled={props.droppable}>\r\n            {(provided, snapshot) => (\r\n              <BoardColumnContent\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {props.items.map((item: any, index: number) => (\r\n                  <BoardItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    index={index}\r\n                    onkey={props.onkey}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}                \r\n              </BoardColumnContent>\r\n            )}\r\n          </Droppable>\r\n         \r\n        </BoardColumnWrapper>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}