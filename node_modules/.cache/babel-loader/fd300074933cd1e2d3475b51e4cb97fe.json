{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25359\\\\sp\\\\react-dnd-task\\\\src\\\\components\\\\board-column.tsx\";\nimport * as React from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport List from \"@material-ui/core/List\"; // Import BoardItem component\n\nimport { BoardItem } from \"./board-item\"; // Define types for board column element properties\n\n// Create styles for BoardColumnWrapper element\nconst BoardColumnWrapper = styled.div`\n  flex: 1;\n  padding: 8px;\n  background-color: #e5eff5;\n  border-radius: 4px;\n  background-color: ${props => props.isDragging ? \"#545454\" : \"#e5eff5\"};\n\n  & + & {\n    margin-left: 12px;\n  }\n`; // Create styles for BoardColumnTitle element\n\nconst BoardColumnTitle = styled.h2`\n  font: 16px sans-serif;\n  margin-bottom: 12px;\n`; // Create styles for BoardColumnContent element\n\nconst BoardColumnContent = styled.div`\n  min-height: 20px;\n  background-color: ${props => props.isDraggingOver ? \"#aecde0\" : null};\n  border-radius: 4px;\n`; // Create and export the BoardColumn component\n\nexport const BoardColumn = props => {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.column.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, (provided1, snapshot1) => /*#__PURE__*/React.createElement(BoardColumnWrapper, Object.assign({}, provided1.draggableProps, provided1.dragHandleProps, {\n    ref: provided1.innerRef,\n    isDragging: snapshot1.isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BoardColumnTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, props.column.title), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: props.column.id,\n    direction: \"vertical\",\n    isDropDisabled: props.droppable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(BoardColumnContent, Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    style: {\n      maxHeight: '500',\n      overflow: 'auto',\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, props.items.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      margin: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(BoardItem, {\n    key: item.id,\n    item: item,\n    index: index,\n    onkey: props.onkey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  })))), provided.placeholder)))));\n};","map":{"version":3,"sources":["C:/Users/25359/sp/react-dnd-task/src/components/board-column.tsx"],"names":["React","Draggable","Droppable","styled","List","BoardItem","BoardColumnWrapper","div","props","isDragging","BoardColumnTitle","h2","BoardColumnContent","isDraggingOver","BoardColumn","column","id","index","provided1","snapshot1","draggableProps","dragHandleProps","innerRef","title","droppable","provided","snapshot","droppableProps","maxHeight","overflow","margin","padding","items","map","item","onkey","placeholder"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\n// Import BoardItem component\r\nimport { BoardItem } from \"./board-item\";\r\n\r\n// Define types for board column element properties\r\ntype BoardColumnProps = {\r\n  index: number;\r\n  key: string;\r\n  column: any;\r\n  items: any;\r\n  droppable: boolean;\r\n  onkey: (event: React.KeyboardEvent<HTMLInputElement>) => void;\r\n\r\n};\r\n\r\n// Define types for board column content style properties\r\n// This is necessary for TypeScript to accept the 'isDraggingOver' prop.\r\ntype BoardColumnContentStylesProps = {\r\n  isDraggingOver?: boolean;\r\n  isDragging?: boolean;\r\n};\r\n\r\n// Create styles for BoardColumnWrapper element\r\nconst BoardColumnWrapper = styled.div<BoardColumnContentStylesProps>`\r\n  flex: 1;\r\n  padding: 8px;\r\n  background-color: #e5eff5;\r\n  border-radius: 4px;\r\n  background-color: ${(props) => (props.isDragging ? \"#545454\" : \"#e5eff5\")};\r\n\r\n  & + & {\r\n    margin-left: 12px;\r\n  }\r\n`;\r\n\r\n// Create styles for BoardColumnTitle element\r\nconst BoardColumnTitle = styled.h2`\r\n  font: 16px sans-serif;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\n// Create styles for BoardColumnContent element\r\nconst BoardColumnContent = styled.div<BoardColumnContentStylesProps>`\r\n  min-height: 20px;\r\n  background-color: ${(props) => (props.isDraggingOver ? \"#aecde0\" : null)};\r\n  border-radius: 4px;\r\n`;\r\n\r\n// Create and export the BoardColumn component\r\nexport const BoardColumn: React.FC<BoardColumnProps> = (props) => {\r\n  return (\r\n    <Draggable draggableId={props.column.id} index={props.index}>\r\n      {(provided1, snapshot1) => (\r\n        <BoardColumnWrapper\r\n          {...provided1.draggableProps}\r\n          {...provided1.dragHandleProps}\r\n          ref={provided1.innerRef}\r\n          isDragging={snapshot1.isDragging}\r\n        >\r\n          <BoardColumnTitle>{props.column.title}</BoardColumnTitle>\r\n          \r\n          <Droppable droppableId={props.column.id} direction=\"vertical\" isDropDisabled={props.droppable}>\r\n            {(provided, snapshot) => (\r\n              <BoardColumnContent\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                <List style={{maxHeight: '500', overflow: 'auto', margin:\"0\"}} >\r\n                  <ul style={{padding:\"0\"}}>\r\n                {props.items.map((item: any, index: number) => (\r\n                  <li style={{margin:\"0\"}}>\r\n                  <BoardItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    index={index}\r\n                    onkey={props.onkey}\r\n                  />\r\n                </li>))}\r\n                </ul>\r\n                {provided.placeholder}\r\n                </List>\r\n              </BoardColumnContent>\r\n            )}\r\n          </Droppable>\r\n         \r\n        </BoardColumnWrapper>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}