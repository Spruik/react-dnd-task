{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25359\\\\sp\\\\react-dnd-task\\\\src\\\\components\\\\board-item.tsx\";\nimport React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\"; // Define types for board item element properties\n\n// Create style for board item element\nconst BoardItemEl = styled.div`\n  padding: 8px;\n  margin-top:10px;\n  margin-bottom:15px;\n  background-color:  ${props => props.isDragging ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.4)'};r\n  border-radius: 4px;\n  transition: background-color 0.25s ease-out;\n\n  & + & {\n    margin-top: 4px;\n  }\n`;\nconst AddInput = styled.input`\n  border:none;\n  background-color:transparent;\n  color: #fff;\n  height:30px;\n  font-size:14px;\n  fontWeight:bold;\n  width:50%;\n\n`; // Create and export the BoardItem component\n\nexport const BoardItem = props => {\n  const [content, setContent] = useState(props.item.content);\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.item.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(BoardItemEl, Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n    ref: provided.innerRef,\n    isDragging: snapshot.isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddInput, {\n    id: props.item.id,\n    value: content,\n    onChange: event => {\n      setContent(event.target.value);\n    },\n    onKeyUp: props.onkey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/25359/sp/react-dnd-task/src/components/board-item.tsx"],"names":["React","useState","Draggable","styled","BoardItemEl","div","props","isDragging","AddInput","input","BoardItem","content","setContent","item","id","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","event","target","value","onkey"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAGA;;AAaA;AACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAA0B;AACrD;AACA;AACA;AACA,uBAAwBC,KAAD,IAAWA,KAAK,CAACC,UAAN,GAAmB,iBAAnB,GAAuC,iBAAkB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,QAAQ,GAAGL,MAAM,CAACM,KAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA,C,CAWA;;AACA,OAAO,MAAMC,SAAS,GAAIJ,KAAD,IAA2B;AAClD,QAAK,CAACK,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACK,KAAK,CAACO,IAAN,CAAWF,OAAZ,CAArC;AACA,sBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEL,KAAK,CAACO,IAAN,CAAWC,EAAnC;AAAuC,IAAA,KAAK,EAAER,KAAK,CAACS,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,QAAD,EAAWC,QAAX,kBACC,oBAAC,WAAD,oBACMD,QAAQ,CAACE,cADf,EAEMF,QAAQ,CAACG,eAFf;AAGE,IAAA,GAAG,EAAEH,QAAQ,CAACI,QAHhB;AAIE,IAAA,UAAU,EAAEH,QAAQ,CAACV,UAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAME,oBAAC,QAAD;AACE,IAAA,EAAE,EAAID,KAAK,CAACO,IAAN,CAAWC,EADnB;AAEE,IAAA,KAAK,EAAEH,OAFT;AAGE,IAAA,QAAQ,EAAGU,KAAD,IAAW;AACnBT,MAAAA,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,KALH;AAME,IAAA,OAAO,EAAEjB,KAAK,CAACkB,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFJ,CADF;AAsBD,CAxBM","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n// Define types for board item element properties\r\ntype BoardItemProps = {\r\n  index: number;\r\n  item: any;\r\n  onkey: (event:React.KeyboardEvent<HTMLInputElement>)=>void;\r\n};\r\n\r\n// Define types for board item element style properties\r\n// This is necessary for TypeScript to accept the 'isDragging' prop.\r\ntype BoardItemStylesProps = {\r\n  isDragging: boolean;\r\n};\r\n\r\n// Create style for board item element\r\nconst BoardItemEl = styled.div<BoardItemStylesProps>`\r\n  padding: 8px;\r\n  margin-top:10px;\r\n  margin-bottom:15px;\r\n  background-color:  ${(props) => props.isDragging ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.4)'};r\r\n  border-radius: 4px;\r\n  transition: background-color 0.25s ease-out;\r\n\r\n  & + & {\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nconst AddInput = styled.input`\r\n  border:none;\r\n  background-color:transparent;\r\n  color: #fff;\r\n  height:30px;\r\n  font-size:14px;\r\n  fontWeight:bold;\r\n  width:50%;\r\n\r\n`;\r\n\r\n// Create and export the BoardItem component\r\nexport const BoardItem = (props: BoardItemProps) => {\r\n  const[content, setContent] = useState(props.item.content);\r\n  return (\r\n    <Draggable draggableId={props.item.id} index={props.index}>\r\n      {(provided, snapshot) => (\r\n        <BoardItemEl\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          <AddInput\r\n            id = {props.item.id}\r\n            value={content}\r\n            onChange={(event) => {\r\n              setContent(event.target.value);\r\n            }}\r\n            onKeyUp={props.onkey}\r\n           \r\n          />\r\n        </BoardItemEl>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}