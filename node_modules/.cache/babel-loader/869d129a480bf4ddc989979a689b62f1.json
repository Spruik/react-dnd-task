{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25359\\\\sp\\\\react-dnd-task\\\\src\\\\components\\\\board-column.tsx\";\nimport * as React from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\"; // Import BoardItem component\n\nimport { BoardItem } from \"./board-item\"; // Define types for board column element properties\n\n// Create styles for BoardColumnWrapper element\nconst BoardColumnWrapper = styled.div`\n  flex: 1;\n  background-color: rgba(0, 0, 0, 0.2);\n  & + & {\n    margin-left: 20px;\n  }\n`;\nconst AddButton = styled.button`\n border:none;\n background-color: transparent;\n font-size: 30px;\n`; // Create styles for BoardColumnTitle element\n\nconst BoardColumnTitle = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  padding-left:20px;\n  padding-right:20px;\n  display:flex;\n  justify-content:space-between;\n  margin-bottom: 5px;\n  height: 50px;\n  line-height: 50px;\n  color: #fff;\n`; // Create styles for BoardColumnContent element\n\nconst BoardColumnContent = styled.div`\n  margin: 5%;\n  border-radius: 4px;\n  min-height: 20px;\n`; // Create and export the BoardColumn component\n\nexport const BoardColumn = props => {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.column.id,\n    index: props.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, (provided1, snapshot1) => /*#__PURE__*/React.createElement(BoardColumnWrapper, Object.assign({}, provided1.draggableProps, provided1.dragHandleProps, {\n    ref: provided1.innerRef,\n    isDragging: snapshot1.isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BoardColumnTitle, {\n    style: {\n      backgroundColor: props.bgColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, props.column.title, /*#__PURE__*/React.createElement(AddButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \" + \")), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: props.column.id,\n    direction: \"vertical\",\n    isDropDisabled: props.droppable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(BoardColumnContent, Object.assign({}, provided.droppableProps, {\n    ref: provided.innerRef,\n    isDraggingOver: snapshot.isDraggingOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), props.items.map((item, index) => /*#__PURE__*/React.createElement(BoardItem, {\n    key: item.id,\n    item: item,\n    index: index,\n    onkey: props.onkey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  })), provided.placeholder))));\n};","map":{"version":3,"sources":["C:/Users/25359/sp/react-dnd-task/src/components/board-column.tsx"],"names":["React","Draggable","Droppable","styled","BoardItem","BoardColumnWrapper","div","AddButton","button","BoardColumnTitle","BoardColumnContent","BoardColumn","props","column","id","index","provided1","snapshot1","draggableProps","dragHandleProps","innerRef","isDragging","backgroundColor","bgColor","title","droppable","provided","snapshot","droppableProps","isDraggingOver","items","map","item","onkey","placeholder"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AAkBA;AACA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAmC;AACrE;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,MAAO;AAChC;AACA;AACA;AACA,CAJA,C,CAKA;;AACA,MAAMC,gBAAgB,GAAGN,MAAM,CAACG,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA,C,CAaA;;AACA,MAAMI,kBAAkB,GAAGP,MAAM,CAACG,GAAmC;AACrE;AACA;AACA;AACA,CAJA,C,CAMA;;AACA,OAAO,MAAMK,WAAuC,GAAIC,KAAD,IAAW;AAChE,sBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEA,KAAK,CAACC,MAAN,CAAaC,EAArC;AAAyC,IAAA,KAAK,EAAEF,KAAK,CAACG,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,SAAD,EAAYC,SAAZ,kBACC,oBAAC,kBAAD,oBACMD,SAAS,CAACE,cADhB,EAEMF,SAAS,CAACG,eAFhB;AAGE,IAAA,GAAG,EAAEH,SAAS,CAACI,QAHjB;AAIE,IAAA,UAAU,EAAEH,SAAS,CAACI,UAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAME,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEV,KAAK,CAACW;AAAzB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACC,MAAN,CAAaW,KADhB,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CANF,eAWE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEZ,KAAK,CAACC,MAAN,CAAaC,EAD5B;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,cAAc,EAAEF,KAAK,CAACa,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACC,QAAD,EAAWC,QAAX,kBACC,oBAAC,kBAAD,oBACMD,QAAQ,CAACE,cADf;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAACN,QAFhB;AAGE,IAAA,cAAc,EAAEO,QAAQ,CAACE,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGjB,KAAK,CAACkB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAYjB,KAAZ,kBACf,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEiB,IAAI,CAAClB,EADZ;AAEE,IAAA,IAAI,EAAEkB,IAFR;AAGE,IAAA,KAAK,EAAEjB,KAHT;AAIE,IAAA,KAAK,EAAEH,KAAK,CAACqB,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,EAaGP,QAAQ,CAACQ,WAbZ,CANJ,CAXF,CAFJ,CADF;AAyCD,CA1CM","sourcesContent":["import * as React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\n// Import BoardItem component\r\nimport { BoardItem } from \"./board-item\";\r\n\r\n// Define types for board column element properties\r\ntype BoardColumnProps = {\r\n  index: number;\r\n  key: string;\r\n  column: any;\r\n  items: any;\r\n  droppable: boolean;\r\n  onkey: (event: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  bgColor: string;\r\n};\r\n\r\n// Define types for board column content style properties\r\n// This is necessary for TypeScript to accept the 'isDraggingOver' prop.\r\ntype BoardColumnContentStylesProps = {\r\n  isDraggingOver?: boolean;\r\n  isDragging?: boolean;\r\n};\r\n\r\n// Create styles for BoardColumnWrapper element\r\nconst BoardColumnWrapper = styled.div<BoardColumnContentStylesProps>`\r\n  flex: 1;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  & + & {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\nconst AddButton = styled.button`\r\n border:none;\r\n background-color: transparent;\r\n font-size: 30px;\r\n`;\r\n// Create styles for BoardColumnTitle element\r\nconst BoardColumnTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  padding-left:20px;\r\n  padding-right:20px;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  color: #fff;\r\n`;\r\n\r\n// Create styles for BoardColumnContent element\r\nconst BoardColumnContent = styled.div<BoardColumnContentStylesProps>`\r\n  margin: 5%;\r\n  border-radius: 4px;\r\n  min-height: 20px;\r\n`;\r\n\r\n// Create and export the BoardColumn component\r\nexport const BoardColumn: React.FC<BoardColumnProps> = (props) => {\r\n  return (\r\n    <Draggable draggableId={props.column.id} index={props.index}>\r\n      {(provided1, snapshot1) => (\r\n        <BoardColumnWrapper\r\n          {...provided1.draggableProps}\r\n          {...provided1.dragHandleProps}\r\n          ref={provided1.innerRef}\r\n          isDragging={snapshot1.isDragging}\r\n        >\r\n          <BoardColumnTitle style={{ backgroundColor: props.bgColor }}>\r\n            {props.column.title}\r\n            <AddButton> + </AddButton>\r\n          </BoardColumnTitle>\r\n\r\n          <Droppable\r\n            droppableId={props.column.id}\r\n            direction=\"vertical\"\r\n            isDropDisabled={props.droppable}\r\n          >\r\n            {(provided, snapshot) => (\r\n              <BoardColumnContent\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {props.items.map((item: any, index: number) => (\r\n                  <BoardItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    index={index}\r\n                    onkey={props.onkey}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n              </BoardColumnContent>\r\n            )}\r\n          </Droppable>\r\n        </BoardColumnWrapper>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}