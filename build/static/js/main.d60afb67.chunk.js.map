{"version":3,"sources":["data/board-initial-data.ts","actions/actions.ts","store/app-store.ts","reducers/board-reducer.ts","reducers/column-reducer.ts","reducers/card-reducer.ts","store/initialize-store.ts","services/image-services.ts","utils/constant.ts","utils/util-functions.ts","components/board-column-editor.tsx","components/edit-button.tsx","components/add-column.tsx","components/board-item-editor.tsx","components/board-item.tsx","components/board-column.tsx","components/board.tsx","components/header.tsx","index.tsx"],"names":["initialBoardData","id","content","title","itemsIds","ADD_CARD","DELETE_CARD","MOVE_CARD","CHANGE_CARD_TEXT","ADD_LIST","DELETE_LIST","MOVE_LIST","DELETE_LIST_MESSAGE","CHANGE_LIST_TITLE","reducers","combineReducers","board","state","lists","action","type","listId","payload","oldListIndex","newListIndex","newLists","Array","from","splice","removedList","filterDeleted","tmpListId","filter","listsById","listTitle","_id","cards","restOfLists","cardId","oldCardIndex","newCardIndex","sourceListId","destListId","newCards","removedCard","sourceCards","destinationCards","deletedCardId","cardsById","cardText","text","restOfCards","cardIds","Object","keys","includes","reduce","newState","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","console","log","length","items","columns","key","value","dispatch","forEach","item","index","entries","seed","fetchImages","BASE_URL","axios","get","then","res","images","data","map","img","thumb","urls","full","document","body","style","backgroundImage","backgroundRepeat","backgroundSize","catch","error","useViewport","useState","width","window","innerWidth","height","innerHeight","setState","useEffect","handleWindowResize","addEventListener","removeEventListener","BoardColumnEditorContainer","styled","div","BoardColumnEditor","props","ref","createRef","handleClick","e","node","current","contains","target","onClickOutside","handleChangeTitle","deleteList","autoFocus","placeholder","onChange","onKeyDown","keyCode","preventDefault","saveList","maxRows","margin","borderRadius","border","resize","outline","fontSize","padding","icon","faTrash","onClick","cursor","color","EditButtonsContainer","EditButton","EditButtonCancel","EditButtons","tabIndex","backgroundColor","handleSave","saveLabel","handleDelete","marginLeft","handleCancel","faTimes","AddColumnContainer","AddColumn","createList","a","toggleAddingList","shortid","generate","this","React","Component","connect","BoardItemEditors","BoardItemEditor","handleChangeText","event","onEnter","onSave","onCancel","onDelete","adding","BoardItemEl","isDragging","CardIcons","CardIcon","ownProps","card","hover","editing","states","setStates","startHover","endHover","startEditing","endEditing","editCard","deleteCard","confirm","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","faPen","BoardColumnContainer","BoardColumnTitle","ToggleAddCard","BoardColumn","editingTitle","list","addingCard","toggleAddingCard","addCard","toggleEditingTitle","editListTitle","droppableId","_snapshot","faPlus","marginRight","BoardEl","BoardContainer","AddColumnButtonContainer","Board","addingList","handleDragEnd","result","source","destination","onDragEnd","direction","HeaderContainer","ChangeBackground","ChangeBackgroundText","Header","faEdit","GlobalStyle","createGlobalStyle","Page","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d60afb67.chunk.js","sourcesContent":["export const initialBoardData = {\n  items: {\n    \"item-1\": { id: \"item-1\", content: \"Content of item 1.\" },\n    \"item-2\": { id: \"item-2\", content: \"Content of item 2.\" },\n    \"item-3\": { id: \"item-3\", content: \"Content of item 3.\" },\n    \"item-4\": { id: \"item-4\", content: \"Content of item 4.\" },\n    \"item-5\": { id: \"item-5\", content: \"Content of item 5.\" },\n    \"item-6\": { id: \"item-6\", content: \"Content of item 6.\" },\n    \"item-7\": { id: \"item-7\", content: \"Content of item 7.\" },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Column 1\",\n      itemsIds: [\n        \"item-1\",\n        \"item-2\",\n        \"item-3\",\n        \"item-4\",\n        \"item-5\",\n        \"item-6\",\n        \"item-7\",\n      ],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Column 2\",\n      itemsIds: [],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Column 3\",\n      itemsIds: [],\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: \"Column 4\",\n      itemsIds: [],\n    },\n  },\n  columnsOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\"],\n};\n","// action types\nexport const ADD_CARD = 'ADD_CARD';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const CHANGE_CARD_TEXT = 'CHANGE_CARD_TEXT';\nexport const CHANGE_CARD_TEXT_MESSAGE = 'Are you sure to delete this card?';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const MOVE_LIST = 'MOVE_LIST';\nexport const DELETE_LIST_MESSAGE = 'Are you sure to delete this list?';\nexport const CHANGE_LIST_TITLE = 'CHANGE_LIST_TITLE';\n","import { combineReducers, createStore, EmptyObject } from 'redux';\nimport throttle from 'lodash.throttle';\nimport seed from './initialize-store';\n\n// Import reducers\nimport { boardReducers } from '../reducers/board-reducer';\nimport { cardReducers } from '../reducers/card-reducer';\nimport { listsReducers } from '../reducers/column-reducer';\n\nconst reducers = combineReducers({\n  board: boardReducers,\n  listsById: listsReducers,\n  cardsById: cardReducers\n});\n\nconst saveState = (state: EmptyObject & { board: never; listsById: {}; cardsById: {} }) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState);\n\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\n\nconsole.log(store.getState());\n// @ts-ignore\nif (!store.getState().board.lists.length) {\n  console.log('SEED');\n  seed(store);\n}\n\nexport default store;\n","import { ADD_LIST, DELETE_LIST, MOVE_LIST } from '../actions/actions';\n\nexport const boardReducers = (\n  state = { lists: [] },\n  action: {\n    type: any;\n    payload: { listId?: any; oldListIndex?: any; newListIndex?: any };\n  }\n) => {\n  switch (action.type) {\n    case ADD_LIST: {\n      const { listId } = action.payload;\n      return { lists: [...state.lists, listId] };\n    }\n    case MOVE_LIST: {\n      const { oldListIndex, newListIndex } = action.payload;\n      const newLists = Array.from(state.lists);\n      const [removedList] = newLists.splice(oldListIndex, 1);\n      newLists.splice(newListIndex, 0, removedList);\n      return { lists: newLists };\n    }\n    case DELETE_LIST: {\n      const { listId } = action.payload;\n      const filterDeleted = (tmpListId: any) => tmpListId !== listId;\n      const newLists = state.lists.filter(filterDeleted);\n      return { lists: newLists };\n    }\n    default:\n      return state;\n  }\n};\n","import { ADD_CARD, ADD_LIST, CHANGE_LIST_TITLE, DELETE_CARD, DELETE_LIST, MOVE_CARD } from '../actions/actions';\n\nexport const listsReducers = (\n  state = {},\n  action: {\n    type: any;\n    payload: {\n      listId?: any;\n      listTitle?: any;\n      cardId?: any;\n      oldCardIndex?: any;\n      newCardIndex?: any;\n      sourceListId?: any;\n      destListId?: any;\n    };\n  }\n) => {\n  switch (action.type) {\n    case ADD_LIST: {\n      const { listId, listTitle } = action.payload;\n      return {\n        ...state,\n        [listId]: { _id: listId, title: listTitle, cards: [] }\n      };\n    }\n    case CHANGE_LIST_TITLE: {\n      const { listId, listTitle } = action.payload;\n      return {\n        ...state,\n        // @ts-ignore\n        [listId]: { ...state[listId], title: listTitle }\n      };\n    }\n    case DELETE_LIST: {\n      const { listId } = action.payload;\n      // @ts-ignore\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    case ADD_CARD: {\n      const { listId, cardId } = action.payload;\n      return {\n        ...state,\n        // @ts-ignore\n        [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\n      };\n    }\n    case MOVE_CARD: {\n      const { oldCardIndex, newCardIndex, sourceListId, destListId } = action.payload;\n      // Move within the same list\n      if (sourceListId === destListId) {\n        // @ts-ignore\n        const newCards = Array.from(state[sourceListId].cards);\n        const [removedCard] = newCards.splice(oldCardIndex, 1);\n        newCards.splice(newCardIndex, 0, removedCard);\n        return {\n          ...state,\n          // @ts-ignore\n          [sourceListId]: { ...state[sourceListId], cards: newCards }\n        };\n      }\n      // Move card from one list to another\n      // @ts-ignore\n      const sourceCards = Array.from(state[sourceListId].cards);\n      const [removedCard] = sourceCards.splice(oldCardIndex, 1);\n      // @ts-ignore\n      const destinationCards = Array.from(state[destListId].cards);\n      destinationCards.splice(newCardIndex, 0, removedCard);\n      return {\n        ...state,\n        // @ts-ignore\n        [sourceListId]: { ...state[sourceListId], cards: sourceCards },\n        // @ts-ignore\n        [destListId]: { ...state[destListId], cards: destinationCards }\n      };\n    }\n    case DELETE_CARD: {\n      const { cardId: deletedCardId, listId } = action.payload;\n      const filterDeleted = (cardId: any) => cardId !== deletedCardId;\n      return {\n        ...state,\n        [listId]: {\n          // @ts-ignore\n          ...state[listId],\n          // @ts-ignore\n          cards: state[listId].cards.filter(filterDeleted)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ADD_CARD, CHANGE_CARD_TEXT, DELETE_CARD, DELETE_LIST } from '../actions/actions';\n\nexport const cardReducers = (state = {}, action: { type: any; payload: { cardText?: any; cardId?: any; cards?: any } }) => {\n  switch (action.type) {\n    case ADD_CARD: {\n      const { cardText, cardId } = action.payload;\n      return { ...state, [cardId]: { text: cardText, _id: cardId } };\n    }\n    case CHANGE_CARD_TEXT: {\n      const { cardText, cardId } = action.payload;\n      // @ts-ignore\n      return { ...state, [cardId]: { ...state[cardId], text: cardText } };\n    }\n    case DELETE_CARD: {\n      const { cardId } = action.payload;\n      // @ts-ignore\n      const { [cardId]: deletedCard, ...restOfCards } = state;\n      return restOfCards;\n    }\n    // Find every card from the deleted list and remove it\n    case DELETE_LIST: {\n      const { cards: cardIds } = action.payload;\n\n      return Object.keys(state)\n        .filter((cardId) => !cardIds.includes(cardId))\n        .reduce(\n          // @ts-ignore\n          (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\n          {}\n        );\n    }\n    default:\n      return state;\n  }\n};\n","import { initialBoardData } from \"../data/board-initial-data\";\nimport { ADD_LIST, ADD_CARD } from \"../actions/actions\";\n\n// @ts-ignore\nexport default function seed(store) {\n  const { items, columns } = initialBoardData;\n\n  for (const [key, value] of Object.entries(columns)) {\n    console.log(`${key}: ${value}`);\n\n    store.dispatch({\n      type: ADD_LIST,\n      payload: { listId: key, listTitle: value.title },\n    });\n\n    value.itemsIds.forEach((item, index) => {\n      console.log(item, index);\n\n      store.dispatch({\n        type: ADD_CARD,\n        payload: {\n          listId: key,\n          // @ts-ignore\n          cardId: items[item].id,\n          // @ts-ignore\n          cardText: items[item].content,\n        },\n      });\n    });\n  }\n}\n","import axios from 'axios';\nimport { REACT_APP_CLIENT_KEY } from '../utils/constant';\n\nexport const fetchImages = () => {\n  const query = 'landscape';\n  const orientation = 'landscape';\n  const count = 1;\n  const BASE_URL = `https://api.unsplash.com/photos/random?count=${count}&query=${query}&orientation=${orientation}&client_id=${REACT_APP_CLIENT_KEY}`;\n  axios\n    .get(BASE_URL)\n    .then((res) => {\n      const images = res.data.map((img: { id: any; urls: { thumb: any; full: any } }) => ({\n        id: img.id,\n        thumb: img.urls.thumb,\n        full: img.urls.full\n      }));\n      if (images.length > 0) {\n        document.body.style.backgroundImage = `url(\"${images[0].full}\")`;\n        document.body.style.backgroundRepeat = 'no-repeat';\n        document.body.style.backgroundSize = 'cover';\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n","export const REACT_APP_CLIENT_KEY = '';\n","import { useEffect, useState } from 'react';\n\nexport const useViewport = () => {\n  const [state, setState] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  });\n\n  return { width: state.width, height: state.height };\n};\n","import React, { useEffect, createRef } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\n\ntype BoardColumnEditorProps = {\n  saveList: () => void;\n  onClickOutside: () => void;\n  title: any;\n  handleChangeTitle: any;\n  deleteList?: any;\n};\n\nconst BoardColumnEditorContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst BoardColumnEditor: React.FC<BoardColumnEditorProps> = (props) => {\n  const ref = createRef();\n\n  const onEnter = (e: { keyCode: number; preventDefault: () => void }) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      props.saveList();\n    }\n  };\n\n  const handleClick = (e: { target: any }) => {\n    const node = ref.current;\n\n    // @ts-ignore\n    if (node && node.contains(e.target)) {\n      return;\n    }\n\n    props.onClickOutside();\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick, false);\n    return () => document.removeEventListener('click', handleClick, false);\n  });\n\n  const { title, handleChangeTitle, deleteList } = props;\n\n  return (\n    // @ts-ignore\n    <BoardColumnEditorContainer ref={ref}>\n      <TextareaAutosize\n        autoFocus\n        placeholder=\"Enter list title...\"\n        value={title}\n        onChange={handleChangeTitle}\n        onKeyDown={onEnter}\n        maxRows={2}\n        style={{\n          width: deleteList ? 220 : 245,\n          margin: '6px 0 5px 6px',\n          borderRadius: 3,\n          border: 'none',\n          resize: 'none',\n          outline: 'none',\n          fontSize: 15,\n          padding: 5\n        }}\n      />\n      {deleteList && (\n        <FontAwesomeIcon\n          icon={faTrash}\n          onClick={deleteList}\n          style={{\n            cursor: 'pointer',\n            padding: 2,\n            margin: '1px 3px',\n            fontSize: 23,\n            borderRadius: 5,\n            color: 'rgba(0, 0, 0, 0.5)'\n          }}\n        />\n      )}\n    </BoardColumnEditorContainer>\n  );\n};\n\nexport default BoardColumnEditor;\n","import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\n\ntype EditButtonsProps = {\n  handleSave: any;\n  saveLabel: any;\n  handleDelete?: any;\n  handleCancel: any;\n};\n\nconst EditButtonsContainer = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nconst EditButton = styled.div`\n  cursor: pointer;\n  box-shadow: 0 1px 0 0 #3f6f21;\n  width: fit-content;\n  margin: 0 5px 10px;\n  padding: 6px 12px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n  outline: none;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst EditButtonCancel = styled.div`\n  cursor: pointer;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  opacity: 0.5;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst EditButtons: React.FC<EditButtonsProps> = (props) => (\n  <EditButtonsContainer>\n    <EditButton tabIndex={0} style={{ backgroundColor: '#5aac44' }} onClick={props.handleSave}>\n      {props.saveLabel}\n    </EditButton>\n    {props.handleDelete && (\n      <EditButton tabIndex={0} style={{ backgroundColor: '#EA2525', marginLeft: 0 }} onClick={props.handleDelete}>\n        Delete\n      </EditButton>\n    )}\n    <EditButtonCancel tabIndex={0} onClick={props.handleCancel}>\n      <FontAwesomeIcon icon={faTimes} style={{ marginLeft: 5 }} />\n    </EditButtonCancel>\n  </EditButtonsContainer>\n);\n\nexport default EditButtons;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { ADD_LIST } from '../actions/actions';\nimport styled from 'styled-components';\n\n// Import BoardColumnEditor component\nimport BoardColumnEditor from './board-column-editor';\n// Import EditButtons component\nimport EditButtons from './edit-button';\n\ntype AddColumnProps = {\n  dispatch: any;\n  toggleAddingList: () => void;\n};\n\nconst AddColumnContainer = styled.div`\n  background: #dfe3e6;\n  border-radius: 5px;\n  padding: 2px 2px;\n`;\n\nclass AddColumn extends React.Component<AddColumnProps> {\n  state = {\n    title: ''\n  };\n\n  handleChangeTitle = (e: { target: { value: any } }) => this.setState({ title: e.target.value });\n\n  createList = async () => {\n    const { title } = this.state;\n    const { dispatch } = this.props;\n\n    this.props.toggleAddingList();\n\n    dispatch({\n      type: ADD_LIST,\n      payload: { listId: shortid.generate(), listTitle: title }\n    });\n  };\n\n  render() {\n    const { toggleAddingList } = this.props;\n    const { title } = this.state;\n\n    return (\n      <AddColumnContainer>\n        <BoardColumnEditor\n          title={title}\n          handleChangeTitle={this.handleChangeTitle}\n          onClickOutside={toggleAddingList}\n          saveList={this.createList}\n        />\n\n        <EditButtons handleSave={this.createList} saveLabel={'Add list'} handleCancel={toggleAddingList} />\n      </AddColumnContainer>\n    );\n  }\n}\n\nexport default connect()(AddColumn);\n","import React from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\n// Import EditButtons component\nimport EditButtons from './edit-button';\n\ntype BoardItemEditorProps = {\n  text?: any;\n  onSave: (arg0: any) => void;\n  onCancel: any;\n  onDelete?: any;\n  adding?: any;\n};\n\nconst BoardItemEditors = styled.div`\n  min-height: 50px;\n  position: relative;\n  cursor: pointer;\n  margin: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 1px 0 rgba(9, 45, 66, 0.25);\n  font-size: 15px;\n  overflow-wrap: break-word;\n  background-color: #fff;\n`;\n\nclass BoardItemEditor extends React.Component<BoardItemEditorProps> {\n  state = {\n    text: this.props.text || ''\n  };\n\n  handleChangeText = (event: { target: { value: any } }) => this.setState({ text: event.target.value });\n\n  onEnter = (e: { keyCode: number; preventDefault: () => void }) => {\n    const { text } = this.state;\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { onSave, onCancel, onDelete, adding } = this.props;\n\n    return (\n      <>\n        <BoardItemEditors>\n          <TextareaAutosize\n            autoFocus\n            placeholder=\"Enter the text for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n            maxRows={4}\n            style={{\n              width: '100%',\n              border: 'none',\n              resize: 'none',\n              outline: 'none',\n              fontSize: 15\n            }}\n          />\n        </BoardItemEditors>\n        <EditButtons\n          handleSave={() => onSave(text)}\n          saveLabel={adding ? 'Add card' : 'Save'}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n        />\n      </>\n    );\n  }\n}\n\nexport default BoardItemEditor;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CHANGE_CARD_TEXT, CHANGE_CARD_TEXT_MESSAGE, DELETE_CARD } from '../actions/actions';\nimport styled from 'styled-components';\n\n// Import BoardItemEditor component\nimport BoardItemEditor from './board-item-editor';\n\n// Define types for board item element properties\ntype BoardItemProps = {\n  index: number;\n  item?: any;\n  card: any;\n  dispatch: any;\n  listId: any;\n};\n\n// Define types for board item element style properties\n// This is necessary for TypeScript to accept the 'isDragging' prop.\ntype BoardItemStylesProps = {\n  isDragging: boolean;\n};\n\n// Create style for board item element\nconst BoardItemEl = styled.div<BoardItemStylesProps>`\n  background-color: ${(props) => (props.isDragging ? '#d3e4ee' : '#fff')};\n  transition: background-color 0.25s ease-out;\n  position: relative;\n  cursor: pointer;\n  margin: 5px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 1px 0 rgba(9, 45, 66, 0.25);\n  font-size: 15px;\n  overflow-wrap: break-word;\n  min-height: 18px;\n\n  &:hover {\n    background: #f5f6f7;\n  }\n`;\n\nconst CardIcons = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nconst CardIcon = styled.div`\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  margin: 1px;\n  color: rgba(0, 0, 0, 0.5);\n  background: #f5f6f7;\n  opacity: 0.9;\n\n  &:hover {\n    opacity: 1;\n    background: rgba(220, 220, 220, 1);\n  }\n`;\n\n// Create and export the BoardItem component\nconst BoardItem = (props: BoardItemProps) => {\n  const [states, setStates] = useState({\n    hover: false,\n    editing: false,\n    text: ''\n  });\n\n  const startHover = () => setStates({ ...states, hover: true });\n  const endHover = () => setStates({ ...states, hover: false });\n\n  const startEditing = () =>\n    setStates({\n      hover: false,\n      editing: true,\n      text: props.card.text\n    });\n\n  const endEditing = () => setStates({ ...states, hover: false, editing: false });\n\n  const editCard = async (text: any) => {\n    const { card, dispatch } = props;\n\n    endEditing();\n\n    dispatch({\n      type: CHANGE_CARD_TEXT,\n      payload: { cardId: card._id, cardText: text }\n    });\n  };\n\n  const deleteCard = async () => {\n    const { listId, card, dispatch } = props;\n\n    if (window.confirm(CHANGE_CARD_TEXT_MESSAGE)) {\n      dispatch({\n        type: DELETE_CARD,\n        payload: { cardId: card._id, listId }\n      });\n    }\n  };\n\n  if (!states.editing) {\n    return (\n      <Draggable draggableId={props.card._id} index={props.index}>\n        {(provided, snapshot) => (\n          <BoardItemEl\n            isDragging={snapshot.isDragging}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onMouseEnter={startHover}\n            onMouseLeave={endHover}\n          >\n            {states.hover && (\n              <CardIcons>\n                <CardIcon onClick={startEditing}>\n                  <FontAwesomeIcon icon={faPen} />\n                </CardIcon>\n              </CardIcons>\n            )}\n            {props.card.text}\n          </BoardItemEl>\n        )}\n      </Draggable>\n    );\n  } else {\n    return <BoardItemEditor text={props.card.text} onSave={editCard} onDelete={deleteCard} onCancel={endEditing} />;\n  }\n};\n\nconst mapStateToProps = (state: { cardsById: { [x: string]: any } }, ownProps: { cardId: string | number }) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(BoardItem);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport shortid from 'shortid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ADD_CARD, CHANGE_LIST_TITLE, DELETE_LIST, DELETE_LIST_MESSAGE } from '../actions/actions';\nimport styled from 'styled-components';\n\n// Import BoardColumnEditor component\nimport BoardColumnEditor from './board-column-editor';\n// Import BoardItemEditor component\nimport BoardItemEditor from './board-item-editor';\n// Import BoardItem component\nimport BoardItem from './board-item';\n\n// Define types for board column element properties\ntype BoardColumnProps = {\n  listId: any;\n  dispatch: any;\n  list: any;\n  index: any;\n};\n\nconst BoardColumnContainer = styled.div`\n  background: #dfe3e6;\n  flex-shrink: 0;\n  width: 272px;\n  height: fit-content;\n  margin: 10px;\n  border-radius: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n`;\n\nconst BoardColumnTitle = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  overflow-wrap: break-word;\n`;\n\nconst ToggleAddCard = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  color: #6b808c;\n  border-radius: 0 0 10px 10px;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: rgba(9, 45, 66, 0.13);\n    color: #17394d;\n    text-decoration: underline;\n  }\n`;\n\nclass BoardColumn extends React.Component<BoardColumnProps> {\n  state = {\n    editingTitle: false,\n    title: this.props.list ? this.props.list.title : '',\n    addingCard: false\n  };\n\n  toggleAddingCard = () => this.setState({ addingCard: !this.state.addingCard });\n\n  addCard = async (cardText: any) => {\n    const { listId, dispatch } = this.props;\n\n    this.toggleAddingCard();\n\n    const cardId = shortid.generate();\n\n    dispatch({\n      type: ADD_CARD,\n      payload: { cardText, cardId, listId }\n    });\n  };\n\n  toggleEditingTitle = () => this.setState({ editingTitle: !this.state.editingTitle });\n\n  handleChangeTitle = (e: { target: { value: any } }) => this.setState({ title: e.target.value });\n\n  editListTitle = async () => {\n    const { listId, dispatch } = this.props;\n    const { title } = this.state;\n\n    this.toggleEditingTitle();\n\n    dispatch({\n      type: CHANGE_LIST_TITLE,\n      payload: { listId, listTitle: title }\n    });\n  };\n\n  deleteList = async () => {\n    const { listId, list, dispatch } = this.props;\n\n    if (window.confirm(DELETE_LIST_MESSAGE)) {\n      dispatch({\n        type: DELETE_LIST,\n        // @ts-ignore\n        payload: { listId, cards: list.cards }\n      });\n    }\n  };\n\n  render() {\n    const { list, index } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n      // @ts-ignore\n      <Draggable draggableId={list._id} index={index}>\n        {(provided, snapshot) => (\n          <BoardColumnContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            {editingTitle ? (\n              <BoardColumnEditor\n                title={title}\n                handleChangeTitle={this.handleChangeTitle}\n                saveList={this.editListTitle}\n                onClickOutside={this.editListTitle}\n                deleteList={this.deleteList}\n              />\n            ) : (\n              <BoardColumnTitle onClick={this.toggleEditingTitle}>{list.title}</BoardColumnTitle>\n            )}\n            <Droppable droppableId={list._id}>\n              {(provided, _snapshot) => (\n                <div ref={provided.innerRef}>\n                  {list.cards &&\n                    list.cards.map((cardId: any, index: number) => (\n                      <BoardItem key={cardId} cardId={cardId} index={index} listId={list._id} />\n                    ))}\n\n                  {provided.placeholder}\n\n                  {addingCard ? (\n                    <BoardItemEditor onSave={this.addCard} onCancel={this.toggleAddingCard} adding />\n                  ) : (\n                    <ToggleAddCard onClick={this.toggleAddingCard}>\n                      <FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> Add a card\n                    </ToggleAddCard>\n                  )}\n                </div>\n              )}\n            </Droppable>\n          </BoardColumnContainer>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { listsById: { [x: string]: any } }, ownProps: { listId: string | number }) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(BoardColumn);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MOVE_CARD, MOVE_LIST } from '../actions/actions';\nimport styled from 'styled-components';\n\n// Import AddColumn component\nimport AddColumn from './add-column';\n// Import BoardColumn component\nimport BoardColumn from './board-column';\n\ntype BoardProps = {\n  dispatch: any;\n  board: any;\n};\n\n// Create styles board element properties\nconst BoardEl = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-top: 15px;\n`;\n\nconst BoardContainer = styled.div`\n  height: 100%;\n  display: flex;\n  overflow-x: auto;\n`;\n\nconst AddColumnContainer = styled.div`\n  width: 272px;\n  margin: 10px;\n  flex-shrink: 0;\n`;\n\nconst AddColumnButtonContainer = styled.div`\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  min-height: 32px;\n  padding: 5px 8px;\n  transition: background-color 85ms ease-in, opacity 40ms ease-in, border-color 85ms ease-in;\n  height: fit-content;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nclass Board extends React.Component<BoardProps> {\n  state = {\n    addingList: false\n  };\n\n  toggleAddingList = () => this.setState({ addingList: !this.state.addingList });\n\n  handleDragEnd = (result: any) => {\n    const { source, destination, type } = result;\n\n    // dropped outside the allowed zones\n    if (!destination) return;\n\n    const { dispatch } = this.props;\n\n    // Move list\n    if (type === 'COLUMN') {\n      // Prevent update if nothing has changed\n      if (source.index !== destination.index) {\n        dispatch({\n          type: MOVE_LIST,\n          payload: {\n            oldListIndex: source.index,\n            newListIndex: destination.index\n          }\n        });\n      }\n      return;\n    }\n\n    // Move card\n    if (source.index !== destination.index || source.droppableId !== destination.droppableId) {\n      dispatch({\n        type: MOVE_CARD,\n        payload: {\n          sourceListId: source.droppableId,\n          destListId: destination.droppableId,\n          oldCardIndex: source.index,\n          newCardIndex: destination.index\n        }\n      });\n    }\n  };\n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n      <BoardEl>\n        <DragDropContext onDragEnd={this.handleDragEnd}>\n          <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n            {(provided, snapshot) => (\n              <BoardContainer ref={provided.innerRef}>\n                {board.lists.map((listId: any, index: any) => {\n                  return <BoardColumn listId={listId} key={listId} index={index} />;\n                })}\n\n                {provided.placeholder}\n\n                <AddColumnContainer>\n                  {addingList ? (\n                    <AddColumn toggleAddingList={this.toggleAddingList} />\n                  ) : (\n                    <AddColumnButtonContainer onClick={this.toggleAddingList}>\n                      <FontAwesomeIcon icon={faPlus} style={{ marginRight: 5 }} /> Add a list\n                    </AddColumnButtonContainer>\n                  )}\n                </AddColumnContainer>\n              </BoardContainer>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </BoardEl>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { board: any }) => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { fetchImages } from '../services/image-services';\nimport { useViewport } from '../utils/util-functions';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled.div`\n  background: rgba(0, 0, 0, 0.15);\n  color: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  text-align: center;\n  font-size: 40px;\n  font-weight: 200;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst ChangeBackground = styled.div`\n  position: absolute;\n  cursor: pointer;\n  right: 0;\n  z-index: 2;\n  text-align: center;\n  margin-right: 18px;\n  font-size: 20px;\n`;\n\nconst ChangeBackgroundText = styled.div`\n  font-size: 15px;\n  border-radius: 10px;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.4);\n  color: white;\n  font-weight: bold;\n  border: 3px solid #f1f1f1;\n  padding: 10px;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.6);\n  }\n`;\n\nexport const Header: React.FC = () => {\n  const { width } = useViewport();\n\n  return (\n    <HeaderContainer>\n      Demo Board\n      <ChangeBackground onClick={fetchImages}>\n        {width > 768 ? (\n          <ChangeBackgroundText>Change Background</ChangeBackgroundText>\n        ) : (\n          <FontAwesomeIcon icon={faEdit} style={{ fontSize: 20 }} />\n        )}\n      </ChangeBackground>\n    </HeaderContainer>\n  );\n};\n","import React, { useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/app-store';\nimport { fetchImages } from './services/image-services';\nimport { useViewport } from './utils/util-functions';\nimport { createGlobalStyle } from 'styled-components';\n\n// Import main Board component\nimport Board from './components/board';\n// Import Header component\nimport { Header } from './components/header';\n\n// Use createGlobalStyle to change the background of 'body' element\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #4bcffa;\n    height: 100vh;\n    margin: 0;\n  }\n`;\n\n// Create component for the page\nconst Page = () => {\n  const { width } = useViewport();\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Header />\n      <Board />\n      <GlobalStyle />\n    </Provider>\n  );\n};\n\n// Render the page into DOM\nReactDOM.render(<Page />, document.getElementById('root'));\n"],"sourceRoot":""}